// Эта программа моделирует MgO/CofeB/Ta/CoFeB/MgO

// Глобальные конфиги
OutputFormat = OVF2_TEXT
EnableDemag = false
MinimizerStop = 1e-6
Multiplier := pow(10, -4) // для перевода Oe -> T
AntiMultiplier := pow(10, 4) // для перевода T -> Oe

// Есть пара тонкостей:
// Для того, чтобы задать РККИ-обмен между ферромагнитными слоями,
// согласно примеру из туториала (4 серии),
// нужно, чтобы 1) толщины у слоев совпадали
// Будем считать, что top и bottom и spacer толщины 0.8 nm
// Для этого нужно перерасчитать намагниченность насыщения у bottom слоя
// Ячейка дискретизации была одинакова по размерам x, y, z

// ячейка дискретизации, в м
Сellsize := 0.8e-9

Th_Bot_orig := 1.1 * 1e-9
Th_Bot_model := 0.8 * 1e-9

// количества ячеек в моделировании
Xcount := 500
Ycount := 500
Zcount := 3
N_PBC := 0						// number of extra images for PBC

SetMesh(Xcount, Ycount, Zcount, Сellsize, Сellsize, Сellsize, N_PBC, N_PBC, 0)

// реальные размеры
Xsize := Xcount * Сellsize
Ysize := Ycount * Сellsize
Zsize := Zcount * Сellsize

// Определяем два слоя
DefRegion(0, layer(0)) // CoFeB, bottom layer
DefRegion(1, layer(1)) // Ta, spacer layer
DefRegion(2, layer(2)) // CoFeB, top layer
//Setgeom(layer(0).add(layer(2))
Save(regions)

// Параметры материалов
Ms_top := 700e3 // A/m
Kanis_top := 3e3 // J/m^3
Ms_bot := 1200e3 // A/m
Kanis_bot := 3.64e3 // J/m^3
Jex := 1e-11 // J/m
Jaf := -0.6e-5 // J/m^2
AFMAex := -0.6e-14 // J/m (умножил предыдущее на e-9)


// Задаем параметры top layer
Msat.SetRegion(2, Ms_top)
AnisU.SetRegion(2, vector(0, 0, 1))
Ku1.SetRegion(2, Kanis_top)
Aex.SetRegion(2, Jex)

// Задаем параметры spacer layer
Msat.SetRegion(1, 0)
Aex.SetRegion(1, 0)


// Задаем параметры bottom layer
Msat.SetRegion(0, Ms_bot * Th_Bot_orig / Th_Bot_model) // пересчитываем Ms_bottom
AnisU.SetRegion(0, vector(0, 0, 1))
Ku1.SetRegion(0, Kanis_bot * Th_Bot_orig / Th_Bot_model) // пересчитываем Kanis_bot
Aex.SetRegion(0, Jex)


// Initial Magnetisation
m.setRegion(0, uniform(1, 1, 100)) // bottom
m.setRegion(1, uniform(1, 0, 0)) // spacer
m.setRegion(2, uniform(-1, 1, -100)) // top


// RKKY interaction
prefactorZ:= Const((2 * AFMAex ) / (Сellsize * Сellsize * Msat.Average()))
up := Mul(Add(Mul(Const(1),m),Shifted(m,0,0,2)),Shifted(Const(1),0,0,2))
down := Mul(Add(Mul(Const(1),m),Shifted(m,0,0,2)),Shifted(Const(1),0,0,2))

Bc:= Mul(prefactorZ,Add(up,down))
AddFieldTerm(Bc)
AddEdensTerm(Mul(Const(-0.5),Dot(Bc,M_full)))

//No exchange coupling to nonmagnetic spacer
ext_scaleExchange(0, 1, 0)
ext_scaleExchange(1, 2, 0)


// Гистерезис, Oe
Bmax  := 200 * Multiplier
Bstep := 1 * Multiplier
TableAdd(B_ext)

SaveAs(m, "m_inital")

for B:=Bstep; B<=Bmax; B+=Bstep{
    B_ext = vector(0.1*B, 0, B)
    minimize()
    tablesave()
    //B_Oe := B * AntiMultiplier
    //SaveAs(m, sprintf("%s%3.0f%s", "m_", B_Oe, "Oe.ovf"))
}
SaveAs(m, "m_saturation")

for B:=Bmax; B>=-Bmax; B-=Bstep{
    B_ext = vector(0.1*B, 0, B)
    minimize()
    tablesave()
    //B_Oe := B * AntiMultiplier
    //SaveAs(m, sprintf("%s%3.0f%s", "reduced_m_", B_Oe, "Oe.ovf"))

}
SaveAs(m, "m_negative_saturation")

for B:=-Bmax; B<=Bmax; B+=Bstep{
    B_ext = vector(0.01*B, 0.01*B, B)
    minimize()
    tablesave()
}

//SaveAs(m, "m_end")